// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conn.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	MachineId            string   `protobuf:"bytes,1,opt,name=machineId,proto3" json:"machineId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f401a58c1fc7ceef, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

type Response struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f401a58c1fc7ceef, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "protos.Request")
	proto.RegisterType((*Response)(nil), "protos.Response")
}

func init() { proto.RegisterFile("conn.proto", fileDescriptor_f401a58c1fc7ceef) }

var fileDescriptor_f401a58c1fc7ceef = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xce, 0xcf, 0xcb,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xea, 0x5c, 0xec, 0x41,
	0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x32, 0x5c, 0x9c, 0xb9, 0x89, 0xc9, 0x19, 0x99, 0x79,
	0xa9, 0x9e, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x08, 0x01, 0x25, 0x05, 0x2e, 0x8e,
	0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x11, 0x2e, 0xd6, 0x92, 0xfc, 0xec, 0xd4,
	0x3c, 0xa8, 0x2a, 0x08, 0xc7, 0xc8, 0x86, 0x8b, 0xdb, 0x3d, 0x35, 0xcf, 0x2b, 0x3c, 0x24, 0x04,
	0xc4, 0x15, 0xd2, 0xe5, 0xe2, 0x70, 0x4f, 0xcd, 0x83, 0xb0, 0xf9, 0x21, 0xb6, 0x16, 0xeb, 0x41,
	0xed, 0x92, 0x12, 0x40, 0x08, 0x40, 0xcc, 0x4c, 0x82, 0x38, 0xc8, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0x2c, 0x08, 0xf2, 0xbc, 0xa5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GenJWTTokenClient is the client API for GenJWTToken service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GenJWTTokenClient interface {
	GenToken(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type genJWTTokenClient struct {
	cc *grpc.ClientConn
}

func NewGenJWTTokenClient(cc *grpc.ClientConn) GenJWTTokenClient {
	return &genJWTTokenClient{cc}
}

func (c *genJWTTokenClient) GenToken(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protos.GenJWTToken/GenToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GenJWTTokenServer is the server API for GenJWTToken service.
type GenJWTTokenServer interface {
	GenToken(context.Context, *Request) (*Response, error)
}

// UnimplementedGenJWTTokenServer can be embedded to have forward compatible implementations.
type UnimplementedGenJWTTokenServer struct {
}

func (*UnimplementedGenJWTTokenServer) GenToken(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenToken not implemented")
}

func RegisterGenJWTTokenServer(s *grpc.Server, srv GenJWTTokenServer) {
	s.RegisterService(&_GenJWTToken_serviceDesc, srv)
}

func _GenJWTToken_GenToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenJWTTokenServer).GenToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.GenJWTToken/GenToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenJWTTokenServer).GenToken(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _GenJWTToken_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.GenJWTToken",
	HandlerType: (*GenJWTTokenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenToken",
			Handler:    _GenJWTToken_GenToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conn.proto",
}
